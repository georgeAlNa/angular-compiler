{
	"info": {
		"_postman_id": "f9205658-1955-4ad8-a234-a3f1611eb21a",
		"name": "CargoTransport Auth API Copy",
		"description": "Authentication endpoints for CargoTransport API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37804182"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Admin User\",\n  \"email\": \"admin@example.com\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Admin St, City\",\n  \"age\": 35,\n  \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Register a new admin user. Only requires basic user information."
					},
					"response": []
				},
				{
					"name": "Register Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Customer\",\n  \"email\": \"customer@example.com\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\",\n  \"phone\": \"+1234567891\",\n  \"address\": \"456 Customer Ave, City\",\n  \"age\": 28,\n  \"role\": \"user\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Register a new customer user. Only requires basic user information."
					},
					"response": []
				},
				{
					"name": "Register Driver",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jane Driver\",\n  \"email\": \"driver@example.com\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\",\n  \"phone\": \"+1234567892\",\n  \"address\": \"789 Driver Rd, City\",\n  \"age\": 32,\n  \"role\": \"driver\",\n  \"vehicle_description\": \"Toyota Truck 2020\",\n  \"driving_license_number\": \"DL123456789\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Register a new driver user. Requires vehicle description and driving license number."
					},
					"response": []
				},
				{
					"name": "Register Delivery Person",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Mike Delivery\",\n  \"email\": \"delivery@example.com\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\",\n  \"phone\": \"+1234567893\",\n  \"address\": \"321 Delivery Blvd, City\",\n  \"age\": 26,\n  \"role\": \"delivery_person\",\n  \"vehicle_description\": \"Honda Motorcycle 2021\",\n  \"driving_license_number\": \"DL987654321\",\n  \"assigned_governorate_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Register a new delivery person user. Vehicle description, driving license, and governorate assignment are optional."
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"delivery1@cargotransport.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "Authenticate user and receive access token."
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logout"
							]
						},
						"description": "Logout user and invalidate current access token. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{customer_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user"
							]
						},
						"description": "Get authenticated user information. Requires authentication."
					},
					"response": []
				},
				{
					"name": "update current Admin",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Admin User 1\",\n  \"email\": \"admin1@example.com\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Admin St, City\",\n  \"age\": 35,\n  \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/updateProfile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"updateProfile"
							]
						},
						"description": "Register a new admin user. Only requires basic user information."
					},
					"response": []
				},
				{
					"name": "update current Customer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{customer_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Customer 1\",\n  \"email\": \"customer@example.com\",\n  \"phone\": \"+1234567891\",\n  \"address\": \"456 Customer Ave, City\",\n  \"age\": 28,\n  \"role\": \"customer\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/user/update-profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"update-profile"
							]
						},
						"description": "Register a new customer user. Only requires basic user information."
					},
					"response": []
				},
				{
					"name": "update current Driver",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{driver_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jane Driver\",\n  \"email\": \"driver@example.com\",\n  \"phone\": \"+1234567892\",\n  \"address\": \"789 Driver Rd, City\",\n  \"age\": 32,\n  \"role\": \"driver\",\n  \"vehicle_description\": \"Toyota Truck 2020 555\",\n  \"driving_license_number\": \"DL123456789\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/user/update-profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"update-profile"
							]
						},
						"description": "Register a new driver user. Requires vehicle description and driving license number."
					},
					"response": []
				},
				{
					"name": "update current Delivery",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{delivery_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Mike Delivery 1\",\n  \"email\": \"delivery@example.com\",\n  \"phone\": \"+1234567893\",\n  \"address\": \"321 Delivery Blvd, City\",\n  \"age\": 26,\n  \"role\": \"delivery_person\",\n  \"vehicle_description\": \"Honda Motorcycle 2021\",\n  \"driving_license_number\": \"DL987654321 5445\",\n  \"assigned_governorate_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/user/update-profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"update-profile"
							]
						},
						"description": "Register a new delivery person user. Vehicle description, driving license, and governorate assignment are optional."
					},
					"response": []
				}
			]
		},
		{
			"name": "Shipments",
			"item": [
				{
					"name": "Get All Shipments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipments?page=1&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number for pagination"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search by type of cargo, origin address, or QR code",
									"disabled": true
								},
								{
									"key": "filters[where][status]",
									"value": "",
									"description": "Filter by status",
									"disabled": true
								},
								{
									"key": "filters[where][sender_id]",
									"value": "",
									"description": "Filter by sender ID",
									"disabled": true
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Sort by field (e.g., type_of_cargo, created_at)",
									"disabled": true
								},
								{
									"key": "sort_direction",
									"value": "asc",
									"description": "Sort direction (asc or desc)",
									"disabled": true
								}
							]
						},
						"description": "Get paginated list of shipments with optional search, filtering, and sorting. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Get All Shipments (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipments/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"all"
							]
						},
						"description": "Get all shipments without pagination. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Get Shipment by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipments/{{shipment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"{{shipment_id}}"
							]
						},
						"description": "Get a specific shipment by ID. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Create Shipment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"receiver_id\": 2,\n  \"type_of_cargo\": \"Electronics\",\n  \"weight\": 5.5,\n  \"origin_address\": \"123 Main St, Baghdad\",\n  \"destination_address\": \"456 Oak Ave, Basra\",\n  \"special_handling_instructions\": \"Handle with care - fragile items\",\n  \"origin_governorate_id\": 1,\n  \"destination_governorate_id\": 2,\n  \"origin_center_id\": 1,\n  \"destination_center_id\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments"
							]
						},
						"description": "Create a new shipment. All fields are required. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Update Shipment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type_of_cargo\": \"Updated Electronics\",\n  \"weight\": 6.0,\n  \"status\": \"approved\",\n  \"special_handling_instructions\": \"Updated handling instructions\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipments/{{shipment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"{{shipment_id}}"
							]
						},
						"description": "Update an existing shipment. All fields are optional (partial update). Requires authentication."
					},
					"response": []
				},
				{
					"name": "Delete Shipment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipments/{{shipment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"{{shipment_id}}"
							]
						},
						"description": "Soft delete a shipment by ID. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Bulk Assign Shipments to Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"group_id\": 1,\n  \"shipment_ids\": [1, 2, 3, 4, 5]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipments/bulk-assign-group",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"bulk-assign-group"
							]
						},
						"description": "Assign multiple shipments to a specific group. Requires group_id and array of shipment_ids. Requires authentication."
					},
					"response": []
				}
			]
		},
		{
			"name": "Shipment Groups",
			"item": [
				{
					"name": "Get All Shipment Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipment-groups?page=1&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipment-groups"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number for pagination"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search by route description, driver name, or governorate name",
									"disabled": true
								},
								{
									"key": "filters[where][driver_id]",
									"value": "",
									"description": "Filter by driver ID",
									"disabled": true
								},
								{
									"key": "filters[where][from_governorate_id]",
									"value": "",
									"description": "Filter by origin governorate ID",
									"disabled": true
								},
								{
									"key": "filters[in][driver_id]",
									"value": "",
									"description": "Filter by multiple driver IDs (comma-separated)",
									"disabled": true
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Sort by field (e.g., route_description, created_at)",
									"disabled": true
								},
								{
									"key": "sort_direction",
									"value": "asc",
									"description": "Sort direction (asc or desc)",
									"disabled": true
								}
							]
						},
						"description": "Get paginated list of shipment groups with optional search, filtering, and sorting. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Get All Shipment Groups (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipment-groups/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipment-groups",
								"all"
							]
						},
						"description": "Get all shipment groups without pagination. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Get Shipment Group by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipment-groups/{{shipment_group_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipment-groups",
								"{{shipment_group_id}}"
							]
						},
						"description": "Get a specific shipment group by ID. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Create Shipment Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"driver_id\": 1,\n  \"created_by_admin_id\": 1,\n  \"last_updated_by_admin_id\": 1,\n  \"from_governorate_id\": 1,\n  \"to_governorate_id\": 2,\n  \"from_center_id\": 1,\n  \"to_center_id\": 2,\n  \"route_description\": \"Express route from Baghdad to Basra\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipment-groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipment-groups"
							]
						},
						"description": "Create a new shipment group. All fields are required. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Create Shipment Group with Shipments and Checkpoints",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"driver_id\": 1,\n    \"from_governorate_id\": 1,\n    \"to_governorate_id\": 2,\n    \"from_center_id\": 1,\n    \"to_center_id\": 2,\n    \"shipment_ids\": [\n             110, 118\n    ],\n    \"checkpoints\": [\n        {\n            \"checkpoint_id\": 1,\n            \"order\": 1\n        },\n        {\n            \"checkpoint_id\": 2,\n            \"order\": 2\n        },\n        {\n            \"checkpoint_id\": 3,\n            \"order\": 3\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipment-groups/with-shipments-checkpoints",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipment-groups",
								"with-shipments-checkpoints"
							]
						},
						"description": "Create a new shipment group with multiple shipments and checkpoints in a single request. This API allows you to create a complete shipment group setup including all shipments and their route checkpoints. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Update Shipment Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"route_description\": \"Updated express route from Baghdad to Basra\",\n  \"last_updated_by_admin_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipment-groups/{{shipment_group_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipment-groups",
								"{{shipment_group_id}}"
							]
						},
						"description": "Update an existing shipment group. All fields are optional (partial update). Requires authentication."
					},
					"response": []
				},
				{
					"name": "Delete Shipment Group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipment-groups/{{shipment_group_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipment-groups",
								"{{shipment_group_id}}"
							]
						},
						"description": "Soft delete a shipment group by ID. Requires authentication."
					},
					"response": []
				}
			]
		},
		{
			"name": "Payments",
			"item": [
				{
					"name": "Get All Payments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/payments?page=1&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number for pagination"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search by payment method or amount",
									"disabled": true
								},
								{
									"key": "filters[where][shipment_id]",
									"value": "",
									"description": "Filter by shipment ID",
									"disabled": true
								},
								{
									"key": "filters[where][payment_method]",
									"value": "",
									"description": "Filter by payment method",
									"disabled": true
								},
								{
									"key": "filters[in][shipment_id]",
									"value": "",
									"description": "Filter by multiple shipment IDs (comma-separated)",
									"disabled": true
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Sort by field (e.g., amount, payment_date, created_at)",
									"disabled": true
								},
								{
									"key": "sort_direction",
									"value": "asc",
									"description": "Sort direction (asc or desc)",
									"disabled": true
								}
							]
						},
						"description": "Get paginated list of payments with optional search, filtering, and sorting. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Get All Payments (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/payments/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"all"
							]
						},
						"description": "Get all payments without pagination. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Get Payment by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/payments/{{payment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"{{payment_id}}"
							]
						},
						"description": "Get a specific payment by ID. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Create Payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shipment_id\": 1,\n  \"amount\": 150.75,\n  \"payment_method\": \"Credit Card\",\n  \"payment_date\": \"2024-01-15\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments"
							]
						},
						"description": "Create a new payment. All fields are required: shipment_id, amount, payment_method, payment_date. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Update Payment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 175.50,\n  \"payment_method\": \"Cash\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/payments/{{payment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"{{payment_id}}"
							]
						},
						"description": "Update an existing payment. All fields are optional (partial update). Requires authentication."
					},
					"response": []
				},
				{
					"name": "Delete Payment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/payments/{{payment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"{{payment_id}}"
							]
						},
						"description": "Soft delete a payment by ID. Requires authentication."
					},
					"response": []
				}
			]
		},
		{
			"name": "Group Tracking",
			"item": [
				{
					"name": "Get All Group Trackings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/group-trackings?page=1&per_page=10&search=&group_id=&checkpoint_id=&sort_by=arrival_time&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-trackings"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number for pagination"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search term"
								},
								{
									"key": "group_id",
									"value": "",
									"description": "Filter by group ID"
								},
								{
									"key": "checkpoint_id",
									"value": "",
									"description": "Filter by checkpoint ID"
								},
								{
									"key": "sort_by",
									"value": "arrival_time",
									"description": "Sort by field (arrival_time, created_at)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get paginated list of group trackings with optional filtering and sorting"
					},
					"response": []
				},
				{
					"name": "Get All Group Trackings (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/group-trackings/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-trackings",
								"all"
							]
						},
						"description": "Get all group trackings without pagination"
					},
					"response": []
				},
				{
					"name": "Get Group Tracking by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/group-trackings/{{group_tracking_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-trackings",
								"{{group_tracking_id}}"
							]
						},
						"description": "Get a specific group tracking by ID"
					},
					"response": []
				},
				{
					"name": "Create Group Tracking",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"group_id\": 1,\n    \"checkpoint_id\": 1,\n    \"arrival_time\": \"2024-01-15 10:30:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/group-trackings",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-trackings"
							]
						},
						"description": "Create a new group tracking record"
					},
					"response": []
				},
				{
					"name": "Update Group Tracking",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"arrival_time\": \"2024-01-15 11:00:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/group-trackings/{{group_tracking_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-trackings",
								"{{group_tracking_id}}"
							]
						},
						"description": "Update an existing group tracking record"
					},
					"response": []
				},
				{
					"name": "Delete Group Tracking",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/group-trackings/{{group_tracking_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-trackings",
								"{{group_tracking_id}}"
							]
						},
						"description": "Delete a group tracking record"
					},
					"response": []
				}
			]
		},
		{
			"name": "Group Checkpoints",
			"item": [
				{
					"name": "Get All Group Checkpoints",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/group-checkpoints?page=1&per_page=10&search=&group_id=&checkpoint_id=&sort_by=order&sort_order=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-checkpoints"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number for pagination"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search term"
								},
								{
									"key": "group_id",
									"value": "",
									"description": "Filter by group ID"
								},
								{
									"key": "checkpoint_id",
									"value": "",
									"description": "Filter by checkpoint ID"
								},
								{
									"key": "sort_by",
									"value": "order",
									"description": "Sort by field (order, created_at)"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get paginated list of group checkpoints with optional filtering and sorting"
					},
					"response": []
				},
				{
					"name": "Get All Group Checkpoints (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/group-checkpoints/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-checkpoints",
								"all"
							]
						},
						"description": "Get all group checkpoints without pagination"
					},
					"response": []
				},
				{
					"name": "Get Group Checkpoint by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/group-checkpoints/{{group_checkpoint_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-checkpoints",
								"{{group_checkpoint_id}}"
							]
						},
						"description": "Get a specific group checkpoint by ID"
					},
					"response": []
				},
				{
					"name": "Create Group Checkpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"group_id\": 1,\n    \"checkpoint_id\": 1,\n    \"order\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/group-checkpoints",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-checkpoints"
							]
						},
						"description": "Create a new group checkpoint"
					},
					"response": []
				},
				{
					"name": "Update Group Checkpoint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/group-checkpoints/{{group_checkpoint_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-checkpoints",
								"{{group_checkpoint_id}}"
							]
						},
						"description": "Update an existing group checkpoint"
					},
					"response": []
				},
				{
					"name": "Delete Group Checkpoint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/group-checkpoints/{{group_checkpoint_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-checkpoints",
								"{{group_checkpoint_id}}"
							]
						},
						"description": "Delete a group checkpoint"
					},
					"response": []
				},
				{
					"name": "Bulk Create Group Checkpoints",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"group_id\": 1,\n    \"checkpoints\": [\n        {\n            \"checkpoint_id\": 1,\n            \"order\": 1\n        },\n        {\n            \"checkpoint_id\": 2,\n            \"order\": 2\n        },\n        {\n            \"checkpoint_id\": 3,\n            \"order\": 3\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/group-checkpoints/bulk-create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"group-checkpoints",
								"bulk-create"
							]
						},
						"description": "Create multiple group checkpoints in bulk for a specific group"
					},
					"response": []
				}
			]
		},
		{
			"name": "Governorates",
			"item": [
				{
					"name": "Get All Governorates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/governorates?page=1&per_page=10&search=&sort_by=name&sort_order=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"governorates"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number for pagination"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search term for governorate name"
								},
								{
									"key": "sort_by",
									"value": "name",
									"description": "Field to sort by (name, created_at, updated_at)"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get paginated list of all governorates with optional search and sorting"
					},
					"response": []
				},
				{
					"name": "Get All Governorates (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/governorates/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"governorates",
								"all"
							]
						},
						"description": "Get all governorates without pagination - useful for dropdown lists"
					},
					"response": []
				},
				{
					"name": "Get Governorate by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/governorates/{{governorate_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"governorates",
								"{{governorate_id}}"
							]
						},
						"description": "Get a specific governorate by its ID"
					},
					"response": []
				},
				{
					"name": "Create Governorate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Baghdad\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/governorates",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"governorates"
							]
						},
						"description": "Create a new governorate. Required fields: name (string, max 255 characters)"
					},
					"response": []
				},
				{
					"name": "Update Governorate",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Governorate Name\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/governorates/{{governorate_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"governorates",
								"{{governorate_id}}"
							]
						},
						"description": "Update an existing governorate. Fields: name (optional, string, max 255 characters)"
					},
					"response": []
				},
				{
					"name": "Delete Governorate",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/governorates/{{governorate_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"governorates",
								"{{governorate_id}}"
							]
						},
						"description": "Soft delete a governorate by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Delivery Confirmations",
			"item": [
				{
					"name": "Get All Delivery Confirmations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/delivery-confirmations?page=1&per_page=10&search=&shipment_id=&confirmed_by_user_id=&sort_by=scanned_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-confirmations"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number for pagination"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search term for delivery confirmations"
								},
								{
									"key": "shipment_id",
									"value": "",
									"description": "Filter by shipment ID"
								},
								{
									"key": "confirmed_by_user_id",
									"value": "",
									"description": "Filter by user who confirmed delivery"
								},
								{
									"key": "sort_by",
									"value": "scanned_at",
									"description": "Field to sort by (scanned_at, created_at, updated_at)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get paginated list of all delivery confirmations with optional search and filtering"
					},
					"response": []
				},
				{
					"name": "Get All Delivery Confirmations (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/delivery-confirmations/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-confirmations",
								"all"
							]
						},
						"description": "Get all delivery confirmations without pagination"
					},
					"response": []
				},
				{
					"name": "Get Delivery Confirmation by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/delivery-confirmations/{{delivery_confirmation_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-confirmations",
								"{{delivery_confirmation_id}}"
							]
						},
						"description": "Get a specific delivery confirmation by its ID"
					},
					"response": []
				},
				{
					"name": "Create Delivery Confirmation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_id\": 1,\n    \"confirmed_by_user_id\": 1,\n    \"scanned_at\": \"2024-01-15 14:30:00\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/delivery-confirmations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-confirmations"
							]
						},
						"description": "Create a new delivery confirmation. Required fields: shipment_id (must exist), confirmed_by_user_id (must exist), scanned_at (date)"
					},
					"response": []
				},
				{
					"name": "Update Delivery Confirmation",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scanned_at\": \"2024-01-15 15:45:00\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/delivery-confirmations/{{delivery_confirmation_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-confirmations",
								"{{delivery_confirmation_id}}"
							]
						},
						"description": "Update an existing delivery confirmation. All fields are optional: shipment_id, confirmed_by_user_id, scanned_at"
					},
					"response": []
				},
				{
					"name": "Delete Delivery Confirmation",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/delivery-confirmations/{{delivery_confirmation_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-confirmations",
								"{{delivery_confirmation_id}}"
							]
						},
						"description": "Soft delete a delivery confirmation by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Complaints",
			"item": [
				{
					"name": "Get All Complaints",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/complaints?page=1&per_page=10&search=&shipment_id=&customer_id=&sort_by=created_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"complaints"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number for pagination"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search term for complaints"
								},
								{
									"key": "shipment_id",
									"value": "",
									"description": "Filter by shipment ID"
								},
								{
									"key": "customer_id",
									"value": "",
									"description": "Filter by customer ID"
								},
								{
									"key": "sort_by",
									"value": "created_at",
									"description": "Field to sort by (created_at, updated_at, description)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get paginated list of all complaints with optional search and filtering"
					},
					"response": []
				},
				{
					"name": "Get All Complaints (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/complaints/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"complaints",
								"all"
							]
						},
						"description": "Get all complaints without pagination"
					},
					"response": []
				},
				{
					"name": "Get Complaint by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/complaints/{{complaint_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"complaints",
								"{{complaint_id}}"
							]
						},
						"description": "Get a specific complaint by its ID"
					},
					"response": []
				},
				{
					"name": "Create Complaint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_id\": 1,\n    \"customer_id\": 1,\n    \"description\": \"Package was damaged during delivery\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/complaints",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"complaints"
							]
						},
						"description": "Create a new complaint. Required fields: shipment_id (must exist), customer_id (must exist), description (max 255 characters)"
					},
					"response": []
				},
				{
					"name": "Update Complaint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Package was severely damaged and contents were missing\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/complaints/{{complaint_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"complaints",
								"{{complaint_id}}"
							]
						},
						"description": "Update an existing complaint. All fields are optional: shipment_id, customer_id, description"
					},
					"response": []
				},
				{
					"name": "Delete Complaint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/complaints/{{complaint_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"complaints",
								"{{complaint_id}}"
							]
						},
						"description": "Soft delete a complaint by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Checkpoints",
			"item": [
				{
					"name": "Get All Checkpoints (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/checkpoints/all?search=&governorate_id=&sort_by=created_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"checkpoints",
								"all"
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"description": "Search in checkpoint name"
								},
								{
									"key": "governorate_id",
									"value": "",
									"description": "Filter by governorate ID"
								},
								{
									"key": "sort_by",
									"value": "created_at",
									"description": "Sort by field (name, created_at, updated_at)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get all checkpoints without pagination. Supports search by name and filtering by governorate."
					},
					"response": []
				},
				{
					"name": "Get All Checkpoints (Paginated)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/checkpoints?page=1&per_page=10&search=&governorate_id=&sort_by=created_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"checkpoints"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search in checkpoint name"
								},
								{
									"key": "governorate_id",
									"value": "",
									"description": "Filter by governorate ID"
								},
								{
									"key": "sort_by",
									"value": "created_at",
									"description": "Sort by field (name, created_at, updated_at)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get paginated list of checkpoints. Supports search by name and filtering by governorate."
					},
					"response": []
				},
				{
					"name": "Get Checkpoint by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/checkpoints/{{checkpoint_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"checkpoints",
								"{{checkpoint_id}}"
							]
						},
						"description": "Get a specific checkpoint by its ID"
					},
					"response": []
				},
				{
					"name": "Create Checkpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Downtown Checkpoint\",\n    \"governorate_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/checkpoints",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"checkpoints"
							]
						},
						"description": "Create a new checkpoint. Required fields: name (string, max 255), governorate_id (integer, must exist in governorates table)."
					},
					"response": []
				},
				{
					"name": "Update Checkpoint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Checkpoint Name\",\n    \"governorate_id\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/checkpoints/{{checkpoint_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"checkpoints",
								"{{checkpoint_id}}"
							]
						},
						"description": "Update an existing checkpoint. All fields are optional: name (string, max 255), governorate_id (integer, must exist in governorates table)."
					},
					"response": []
				},
				{
					"name": "Delete Checkpoint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/checkpoints/{{checkpoint_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"checkpoints",
								"{{checkpoint_id}}"
							]
						},
						"description": "Soft delete a checkpoint by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/all?search=&role=&sort_by=created_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"all"
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"description": "Search in user name, email, phone"
								},
								{
									"key": "role",
									"value": "",
									"description": "Filter by user role"
								},
								{
									"key": "sort_by",
									"value": "created_at",
									"description": "Sort by field (name, email, created_at, updated_at)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get all users without pagination. Supports search by name, email, phone and filtering by role."
					},
					"response": []
				},
				{
					"name": "Get All Users (Paginated)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users?page=1&per_page=10&search=&role=&sort_by=created_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search in user name, email, phone"
								},
								{
									"key": "role",
									"value": "",
									"description": "Filter by user role"
								},
								{
									"key": "sort_by",
									"value": "created_at",
									"description": "Sort by field (name, email, created_at, updated_at)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get paginated list of users. Supports search by name, email, phone and filtering by role."
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Get a specific user by their ID"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated User Name\",\n    \"email\": \"updated@example.com\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"Updated Address\",\n    \"age\": 30,\n    \"role\": \"customer\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Update an existing user. All fields are optional: name, email (must be unique), password (min 8 chars), phone, address, age (18-100), role."
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Soft delete a user by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Drivers",
			"item": [
				{
					"name": "Get All Drivers (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/drivers/all?search=&sort_by=created_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"drivers",
								"all"
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"description": "Search in driver details"
								},
								{
									"key": "sort_by",
									"value": "created_at",
									"description": "Sort by field (created_at, updated_at)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get all drivers without pagination. Supports search and sorting."
					},
					"response": []
				},
				{
					"name": "Get All Drivers (Paginated)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/drivers?page=1&per_page=10&search=&sort_by=created_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"drivers"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search in driver details"
								},
								{
									"key": "sort_by",
									"value": "created_at",
									"description": "Sort by field (created_at, updated_at)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get paginated list of drivers. Supports search and sorting."
					},
					"response": []
				},
				{
					"name": "Get Driver by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/drivers/{{driver_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"drivers",
								"{{driver_id}}"
							]
						},
						"description": "Get a specific driver by their ID"
					},
					"response": []
				},
				{
					"name": "Update Driver",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"license_number\": \"DL123456789\",\n    \"vehicle_type\": \"truck\",\n    \"availability_status\": \"available\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/drivers/{{driver_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"drivers",
								"{{driver_id}}"
							]
						},
						"description": "Update an existing driver. Fields may include license_number, vehicle_type, availability_status, etc."
					},
					"response": []
				},
				{
					"name": "Delete Driver",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/drivers/{{driver_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"drivers",
								"{{driver_id}}"
							]
						},
						"description": "Soft delete a driver by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Delivery Persons",
			"item": [
				{
					"name": "Get All Delivery Persons (No Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/delivery-persons/all?search=&sort_by=created_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-persons",
								"all"
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"description": "Search in delivery person details"
								},
								{
									"key": "sort_by",
									"value": "created_at",
									"description": "Sort by field (created_at, updated_at)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get all delivery persons without pagination. Supports search and sorting."
					},
					"response": []
				},
				{
					"name": "Get All Delivery Persons (Paginated)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/delivery-persons?page=1&per_page=10&search=&sort_by=created_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-persons"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Items per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search in delivery person details"
								},
								{
									"key": "sort_by",
									"value": "created_at",
									"description": "Sort by field (created_at, updated_at)"
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Get paginated list of delivery persons. Supports search and sorting."
					},
					"response": []
				},
				{
					"name": "Get Delivery Person by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/delivery-persons/{{delivery_person_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-persons",
								"{{delivery_person_id}}"
							]
						},
						"description": "Get a specific delivery person by their ID"
					},
					"response": []
				},
				{
					"name": "Update Delivery Person",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vehicle_type\": \"motorcycle\",\n    \"availability_status\": \"available\",\n    \"current_location\": \"Downtown Area\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/delivery-persons/{{delivery_person_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-persons",
								"{{delivery_person_id}}"
							]
						},
						"description": "Update an existing delivery person. Fields may include vehicle_type, availability_status, current_location, etc."
					},
					"response": []
				},
				{
					"name": "Delete Delivery Person",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/delivery-persons/{{delivery_person_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-persons",
								"{{delivery_person_id}}"
							]
						},
						"description": "Soft delete a delivery person by ID"
					},
					"response": []
				},
				{
					"name": "My Assigned Shipments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{delivery_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/delivery-persons/my-assigned-shipments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-persons",
								"my-assigned-shipments"
							]
						},
						"description": "Get shipments assigned to the authenticated delivery person. Requires delivery person authentication."
					},
					"response": []
				}
			]
		},
		{
			"name": "Driver APIs",
			"item": [
				{
					"name": "Get Available Shipment Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{driver_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/drivers/available-shipment-groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"drivers",
								"available-shipment-groups"
							]
						},
						"description": "Get shipment groups available for the authenticated driver. Requires driver authentication."
					},
					"response": []
				},
				{
					"name": "Start Shipment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{driver_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_group_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/drivers/start-shipment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"drivers",
								"start-shipment"
							]
						},
						"description": "Start a shipment group. Changes group status to 'in transit'. Requires driver authentication."
					},
					"response": []
				},
				{
					"name": "End Shipment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{driver_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_group_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/drivers/end-shipment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"drivers",
								"end-shipment"
							]
						},
						"description": "End a shipment group. Changes group status to 'delivered'. Requires driver authentication."
					},
					"response": []
				},
				{
					"name": "Deliver Shipment Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_group_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/drivers/deliver-shipment-group",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"drivers",
								"deliver-shipment-group"
							]
						},
						"description": "Mark shipment group as delivered to destination center. Requires driver authentication."
					},
					"response": []
				},
				{
					"name": "Mark Checkpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_group_id\": 1,\n    \"checkpoint_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/drivers/mark-checkpoint",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"drivers",
								"mark-checkpoint"
							]
						},
						"description": "Mark a checkpoint as reached for a shipment group. Creates tracking record. Requires driver authentication."
					},
					"response": []
				}
			]
		},
		{
			"name": "Shipment Management APIs",
			"item": [
				{
					"name": "Add Shipment Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{customer_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"receiver_id\": 2,\n    \"type_of_cargo\": \"Electronics\",\n    \"weight\": 5.5,\n    \"origin_address\": \"123 Main St, Damascus\",\n    \"destination_address\": \"456 Oak Ave, Aleppo\",\n    \"special_handling_instructions\": \"Handle with care - fragile items\",\n    \"origin_governorate_id\": 1,\n    \"destination_governorate_id\": 2,\n    \"origin_center_id\": 1,\n    \"destination_center_id\": 1\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipments/add-shipment-request",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"add-shipment-request"
							]
						},
						"description": "Create a new shipment request. Customer creates shipment with draft status. Requires customer authentication."
					},
					"response": []
				},
				{
					"name": "Get Pending Shipments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipments/pending",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"pending"
							]
						},
						"description": "Get shipments pending admin approval. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Price Shipment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_id\": 110,\n    \"price\": 150.75\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipments/price-shipment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"price-shipment"
							]
						},
						"description": "Set price for a shipment and change status to 'priced by admin'. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Approve Price",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_id\": 110\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipments/approve-price",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"approve-price"
							]
						},
						"description": "Customer approves the price and shipment status becomes 'paid'. Requires customer authentication."
					},
					"response": []
				},
				{
					"name": "Reject Shipment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_id\": 110\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipments/reject-shipment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"reject-shipment"
							]
						},
						"description": "Customer rejects the shipment price. Requires customer authentication."
					},
					"response": []
				},
				{
					"name": "Available to Deliver",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipments/available-to-deliver",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"available-to-deliver"
							]
						},
						"description": "Get shipments available for delivery (delivered to destination center). Requires delivery person authentication."
					},
					"response": []
				},
				{
					"name": "Assign Delivery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_id\": 180,\n    \"delivery_person_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/shipments/assign-delivery",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"assign-delivery"
							]
						},
						"description": "Assign a shipment to a delivery person. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Get My Received Shipments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{customer_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipments/my-received-shipments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"my-received-shipments"
							]
						},
						"description": "Get shipments pending admin approval. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Get My Sent Shipments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{customer_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipments/my-sent-shipments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipments",
								"my-sent-shipments"
							]
						},
						"description": "Get shipments pending admin approval. Requires admin authentication."
					},
					"response": []
				}
			]
		},
		{
			"name": "Shipment Group Management APIs",
			"item": [
				{
					"name": "Get Shipment Group Checkpoints",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{driver_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/shipment-groups/{{shipment_group_id}}/checkpoints",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"shipment-groups",
								"{{shipment_group_id}}",
								"checkpoints"
							]
						},
						"description": "Get all checkpoints for a specific shipment group. Requires authentication."
					},
					"response": []
				}
			]
		},
		{
			"name": "Delivery Confirmation APIs",
			"item": [
				{
					"name": "Confirm Delivery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"qr_code_string\": 'sadfihsaodoh'\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/delivery-confirmations/confirm-delivery",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"delivery-confirmations",
								"confirm-delivery"
							]
						},
						"description": "Confirm delivery of a shipment. Changes shipment status to 'delivered'. Requires delivery person authentication."
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "admin_token",
			"value": "",
			"type": "default"
		},
		{
			"key": "driver_token",
			"value": "2|NHhayPht9dVWGqth4gv22OhANnenRqCTdHlDknB21c07d964",
			"type": "default"
		},
		{
			"key": "customer_token",
			"value": "3|fw1GKnuy6zyHIAGDX1fkrBEfOw9moT2lXC4PeEvp5e0ba368",
			"type": "default"
		},
		{
			"key": "delivery_token",
			"value": "4|sI9ZDfEtjECfduUsfVPRHvLw3Jlib62XMIfcOFBi0d1cf5c2",
			"type": "default"
		}
	]
}